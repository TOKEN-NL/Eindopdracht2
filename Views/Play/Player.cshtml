@{
    ViewData["Title"] = "Play";
}

<div id="player">
    <div class="progress-bar">
        <div class="progress-bar-fill" id="progressBar"></div>
    </div>
    <div id="playerControls">
        <button onclick="previousTrack()">Vorige</button>
        <button id="playPauseButton" onclick="togglePlayPause()">Afspelen/Pauzeren</button>
        <button onclick="nextTrack()">Volgende</button>
    </div>
    <div id="trackInfo">
        <span id="trackTitle"></span> - <span id="trackTime">00:00</span>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        var currentTrackIndex = 0; 
        var tracks = []; // Initialize empty tracks array
        var progressBar = document.getElementById('progressBar');
        var timerDisplay = document.getElementById('trackTime');
        var trackTitle = document.getElementById('trackTitle');
        var playPauseButton = document.getElementById('playPauseButton');
        var timerInterval;

        // Function to add a song to the tracks array
        function addSongToTracks(title, duration) {
            tracks.push({
                title: title,
                duration: duration
            });
        }

        function updateTimerDisplay() {
            var currentTime = timerInterval ? (Date.now() - startTime) / 1000 : 0;
            var duration = tracks[currentTrackIndex].duration;
            var minutes = Math.floor(currentTime / 60);
            var seconds = Math.floor(currentTime % 60);

            var formattedMinutes = minutes < 10 ? '0' + minutes : minutes;
            var formattedSeconds = seconds < 10 ? '0' + seconds : seconds;

            timerDisplay.textContent = formattedMinutes + ':' + formattedSeconds;

            var progress = (currentTime / duration) * 100;
            progressBar.style.width = progress + '%';
        }

        function updateTrackInfo(title) {
            trackTitle.textContent = title || '';
        }

        function startTimer() {
            startTime = Date.now();
            updateTimerDisplay();
            timerInterval = setInterval(updateTimerDisplay, 1000);
        }

        function togglePlayPause() {
            isPlaying = !isPlaying;
            savePlayerState(currentTrackIndex, isPlaying);
            if (timerInterval) {
                clearInterval(timerInterval);
                timerInterval = null;
                playPauseButton.textContent = 'Afspelen';
            } else {
                if (tracks.length > 0) {
                    startTimer();
                    playPauseButton.textContent = 'Pauzeren';
                }
            }
        }

        function previousTrack() {
            if (tracks.length > 0) {
                currentTrackIndex = (currentTrackIndex - 1 + tracks.length) % tracks.length;
                loadTrack(tracks[currentTrackIndex]);
            }
        }

        function nextTrack() {
            if (tracks.length > 0) {
                currentTrackIndex = (currentTrackIndex + 1) % tracks.length;
                loadTrack(tracks[currentTrackIndex]);
            }
        }

        function loadTrack(track) {
            if (track) {
                updateTrackInfo(track.title);
                startTime = Date.now();
                timerInterval = setInterval(updateTimerDisplay, 1000);
            }
        }
        // Function to handle the button click for adding a song
        function playSong(title, duration) {
            // Add the song to the tracks array
            addSongToTracks(title, duration);

            console.log("Song added to tracks:", title);
        }

        // Load the first track by default (if any)
        if (tracks.length > 0) {
            loadTrack(tracks[currentTrackIndex]);
        }

        window.addEventListener('beforeunload', function () {
        });
    });
</script>
